#ifndef _MIPSVM_GUEST_DEVICES_VREGISTERS_H_
#define _MIPSVM_GUEST_DEVICES_VREGISTERS_H_

#include <stdint.h>

#define BIT(x) ((uint32_t)1 << (x))

#define MAX_REGISTERS   (36)

typedef uint32_t REGISTER_t;
typedef char LOGICAL_REGISTER_t[5];

typedef REGISTER_t REGISTER_FILE_t[MAX_REGISTERS];
typedef LOGICAL_REGISTER_t LOGICAL_REGISTER_FILE_t[MAX_REGISTERS];

enum REGISTER_ADDRESS
{
    // TODO: Need to correct register addresses.
    REGISTER_ADDRESS_ZERO = 0,
    REGISTER_ADDRESS_AT = 1,
    REGISTER_ADDRESS_V0 = 2,
    REGISTER_ADDRESS_V1 = 3,
    REGISTER_ADDRESS_A0 = 4,
    REGISTER_ADDRESS_A1 = 5,
    REGISTER_ADDRESS_A2 = 6,
    REGISTER_ADDRESS_A3 = 7,
    REGISTER_ADDRESS_T0 = 8,
    REGISTER_ADDRESS_T1 = 9,
    REGISTER_ADDRESS_T2 = 10,
    REGISTER_ADDRESS_T3 = 11,
    REGISTER_ADDRESS_T4 = 12,
    REGISTER_ADDRESS_T5 = 13,
    REGISTER_ADDRESS_T6 = 14,
    REGISTER_ADDRESS_T7 = 15,
    REGISTER_ADDRESS_S0 = 16,
    REGISTER_ADDRESS_S1 = 17,
    REGISTER_ADDRESS_S2 = 18,
    REGISTER_ADDRESS_S3 = 19,
    REGISTER_ADDRESS_S4 = 20,
    REGISTER_ADDRESS_S5 = 21,
    REGISTER_ADDRESS_S6 = 22,
    REGISTER_ADDRESS_S7 = 23,
    REGISTER_ADDRESS_T8 = 24,
    REGISTER_ADDRESS_T9 = 25,
    REGISTER_ADDRESS_K0 = 26,
    REGISTER_ADDRESS_K1 = 27,
    REGISTER_ADDRESS_GP = 28,
    REGISTER_ADDRESS_SP = 29,
    REGISTER_ADDRESS_FP = 30,
    REGISTER_ADDRESS_RA = 31,
    // What are the address of the three special registers?
    REGISTER_ADDRESS_PC = 32,
    REGISTER_ADDRESS_HI = 33,
    REGISTER_ADDRESS_LO = 34,
    REGISTER_ADDRESS_IR = 35
};

#endif
