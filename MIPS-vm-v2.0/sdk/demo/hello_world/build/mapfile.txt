
Memory Configuration

Name             Origin             Length             Attributes
RAM              0x00000000a0000000 0x000000001fbfffff xr
FLASH            0x00000000bfc00000 0x00000000003fffff xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD ./build/./src/boot/start.s.o

.intvecs        0x00000000bfc00000        0x8
 *(.intvecs)
 .intvecs       0x00000000bfc00000        0x8 ./build/./src/boot/start.s.o
                0x00000000bfc00000                _intvecs

.text           0x00000000bfc00000      0x120
 *(.text)
 .text          0x00000000bfc00000        0x0 ./build/./src/boot/start.s.o
 *(.text.*)
 .text.Reset_Handler
                0x00000000bfc00000      0x120 ./build/./src/boot/start.s.o
                0x00000000bfc00000                Reset_Handler
                0x00000000bfc00120                . = ALIGN (0x4)
 *(.ctors)
                0x00000000bfc00120                . = ALIGN (0x4)
 *(.dtors)
                0x00000000bfc00120                . = ALIGN (0x4)
                0x00000000bfc00120                __init_array_start = .
 *(.init_array*)
                0x00000000bfc00120                __init_array_end = .
 *(.init)
 *(.fini*)

.rodata
 *(.rodata)
 *(.rodata.*)
                0x00000000bfc00120                __etext = .

.MIPS.abiflags  0x00000000bfc00120       0x18
 .MIPS.abiflags
                0x00000000bfc00120       0x18 ./build/./src/boot/start.s.o

.data           0x00000000a0000000        0x0 load address 0x00000000bfc00138
                0x00000000bfc00138                __data_load__ = LOADADDR (.data)
                0x00000000a0000000                __data_start__ = .
 *(.data)
 .data          0x00000000a0000000        0x0 ./build/./src/boot/start.s.o
 *(.data.*)
                0x00000000a0000000                . = ALIGN (0x4)
                0x00000000a0000000                __data_end__ = .

.bss            0x00000000a0000000        0x0
                0x00000000a0000000                __bss_start__ = .
 *(.shbss)
 *(.bss)
 .bss           0x00000000a0000000        0x0 ./build/./src/boot/start.s.o
 *(.bss.*)
 *(COMMON)
 *(.sbss)
                0x00000000a0000000                . = ALIGN (0x4)
                0x00000000a0000000                __bss_end__ = .

.heap           0x00000000a0000000        0x0
                0x00000000a0000000                __heap_start__ = .
                0x00000000a0000000                end = __heap_start__
                0x00000000a0000000                _end = end
                0x00000000a0000000                __end = end
 *(.heap)
                0x00000000a0000000                __heap_end__ = .
                0x00000000a0000000                __HeapLimit = __heap_end__

.stack          0x00000000a0000000        0x0
                0x00000000a0000000                _stack = .
 *(.stack)
                0x00000000bfbfffff                __StackTop = (ORIGIN (RAM) + LENGTH (RAM))
                [!provide]                        PROVIDE (__stack = __StackTop)
OUTPUT(build/helloworld elf32-bigmips)

.reginfo        0x0000000000000000       0x18
 .reginfo       0x0000000000000000       0x18 ./build/./src/boot/start.s.o

.pdr            0x0000000000000000        0x0
 .pdr           0x0000000000000000        0x0 ./build/./src/boot/start.s.o

.gnu.attributes
                0x0000000000000000       0x10
 .gnu.attributes
                0x0000000000000000       0x10 ./build/./src/boot/start.s.o
